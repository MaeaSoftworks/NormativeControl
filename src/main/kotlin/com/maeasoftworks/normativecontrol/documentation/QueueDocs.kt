package com.maeasoftworks.normativecontrol.documentation

import com.maeasoftworks.normativecontrol.controllers.QueueController
import com.maeasoftworks.normativecontrol.documentation.annotations.BodyParam
import com.maeasoftworks.normativecontrol.documentation.annotations.Documentation
import com.maeasoftworks.normativecontrol.documentation.annotations.PossibleResponse
import com.maeasoftworks.normativecontrol.entities.QueueResponse
import com.maeasoftworks.normativecontrol.services.DocumentManager
import org.springframework.http.HttpStatus
import org.springframework.web.multipart.MultipartFile

sealed class QueueDocs(d: DocumentManager) : QueueController(d) {
    @Documentation("Prepares slot in queue.")
    @PossibleResponse(
        HttpStatus.OK,
        QueueResponse::class,
        "slot prepared. See <a class='doc-link' href='/docs?section=QueueResponse'>QueueResponse</a>"
    )
    @PossibleResponse(HttpStatus.NOT_FOUND, description = "document not found")
    @PossibleResponse(HttpStatus.FORBIDDEN, description = "access key is invalid")
    abstract override fun reserve(
        @Documentation("key generated by client")
        accessKey: String
    ): QueueResponse

    @Documentation("Uses to upload document to server. Restrictions: <ul><li><code>docx</code> format</li><li>20 MB</li></ul>")
    @PossibleResponse(HttpStatus.ACCEPTED, description = "file successfully processed")
    @PossibleResponse(HttpStatus.NOT_FOUND, description = "document not found")
    @PossibleResponse(HttpStatus.FORBIDDEN, description = "access key is invalid")
    @PossibleResponse(HttpStatus.BAD_REQUEST, description = "required arguments were empty")
    @PossibleResponse(HttpStatus.UNPROCESSABLE_ENTITY, description = "cannot process this document")
    abstract override fun enqueue(
        @Documentation("document id")
        documentId: String,
        @Documentation("key generated by client")
        accessKey: String,
        @Documentation(".docx file that will be processed")
        @BodyParam
        file: MultipartFile
    )
}
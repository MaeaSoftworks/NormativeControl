text.main=There's nothing yet. Nothing. Like in space.
text.link=https://youtu.be/eIfNlccl7hk
text.quote=Stars are falling from the sky...
text.hint=Click in any place to hide interface
web.lang=en
web.title=Normative Control
docs.methods.title=API Methods
docs.entities.title=API Entities
docs.info.common.description=Description
docs.info.no_selection=Please, select method or entity.
docs.info.method.header=Method
docs.info.method.path_params=Path params
docs.info.method.query_params=Query params
docs.info.method.responses=Responses
docs.info.method.body_params=Body params
docs.info.entity.header=Entity
docs.info.entity.properties=Properties
#region methods
#region DocumentController
#region DocumentController.getStatus
docs.DocumentController.getStatus.description=Return current state of document.
docs.DocumentController.getStatus.documentId=document id
docs.DocumentController.getStatus.accessKey=key generated by client
docs.DocumentController.getStatus.response0.description=see <a class='doc-link' href='/docs?section=StateResponse'>StatusResponse</a>
docs.DocumentController.getStatus.response0.type=Status
docs.DocumentController.getStatus.response0.status=200
docs.DocumentController.getStatus.response1.description=required arguments were empty
docs.DocumentController.getStatus.response1.type=
docs.DocumentController.getStatus.response1.status=400
docs.DocumentController.getStatus.response2.description=access key is invalid
docs.DocumentController.getStatus.response2.type=
docs.DocumentController.getStatus.response2.status=403
docs.DocumentController.getStatus.response3.description=document not found
docs.DocumentController.getStatus.response3.type=
docs.DocumentController.getStatus.response3.status=404
#endregion DocumentController.getStatus
#region DocumentController.getMistakes
docs.DocumentController.getMistakes.description=Return mistakes in file. Mistakes will only be returned if processing was successful.
docs.DocumentController.getMistakes.documentId=document id
docs.DocumentController.getMistakes.accessKey=key generated by client
docs.DocumentController.getMistakes.response0.description=see <a class='doc-link' href='/docs?section=MistakesResponse'>MistakesResponse</a>
docs.DocumentController.getMistakes.response0.type=MistakesResponse
docs.DocumentController.getMistakes.response0.status=200
docs.DocumentController.getMistakes.response1.description=required arguments were empty
docs.DocumentController.getMistakes.response1.type=
docs.DocumentController.getMistakes.response1.status=400
docs.DocumentController.getMistakes.response2.description=access key is invalid
docs.DocumentController.getMistakes.response2.type=
docs.DocumentController.getMistakes.response2.status=403
docs.DocumentController.getMistakes.response3.description=document not found
docs.DocumentController.getMistakes.response3.type=
docs.DocumentController.getMistakes.response3.status=404
docs.DocumentController.getMistakes.response4.description=cannot process this document
docs.DocumentController.getMistakes.response4.type=
docs.DocumentController.getMistakes.response4.status=422
#endregion DocumentController.getMistakes
#region DocumentController.getRawFile
docs.DocumentController.getRawFile.description=Returns processed file as ByteArrayResource. File will be returned only if processing was successful.
docs.DocumentController.getRawFile.documentId=document id
docs.DocumentController.getRawFile.accessKey=key generated by client
docs.DocumentController.getRawFile.response0.description=file as array of bytes (can be null)
docs.DocumentController.getRawFile.response0.type=ByteArrayResource
docs.DocumentController.getRawFile.response0.status=200
docs.DocumentController.getRawFile.response1.description=required arguments were empty
docs.DocumentController.getRawFile.response1.type=
docs.DocumentController.getRawFile.response1.status=400
docs.DocumentController.getRawFile.response2.description=access key is invalid
docs.DocumentController.getRawFile.response2.type=
docs.DocumentController.getRawFile.response2.status=403
docs.DocumentController.getRawFile.response3.description=document not found
docs.DocumentController.getRawFile.response3.type=
docs.DocumentController.getRawFile.response3.status=404
docs.DocumentController.getRawFile.response4.description=cannot process this document
docs.DocumentController.getRawFile.response4.type=
docs.DocumentController.getRawFile.response4.status=422
#endregion DocumentController.getRawFile
#region DocumentController.getRender
docs.DocumentController.getRender.description=Returns HTML render of document as string.
docs.DocumentController.getRender.documentId=document id
docs.DocumentController.getRender.accessKey=key generated by client
docs.DocumentController.getRender.response0.description=document in HTML
docs.DocumentController.getRender.response0.type=String
docs.DocumentController.getRender.response0.status=200
docs.DocumentController.getRender.response1.description=required arguments were empty
docs.DocumentController.getRender.response1.type=
docs.DocumentController.getRender.response1.status=400
docs.DocumentController.getRender.response2.description=access key is invalid
docs.DocumentController.getRender.response2.type=
docs.DocumentController.getRender.response2.status=403
docs.DocumentController.getRender.response3.description=document not found
docs.DocumentController.getRender.response3.type=
docs.DocumentController.getRender.response3.status=404
docs.DocumentController.getRender.response4.description=cannot process this document
docs.DocumentController.getRender.response4.type=
docs.DocumentController.getRender.response4.status=422
#endregion DocumentController.getRender
#endregion DocumentController
#region AuthController
#region AuthController.registerUser
docs.AuthController.registerUser.description=Uses to register new user. <b>Attention!</b> You must have role <i>DEV</i> to do this action.
docs.AuthController.registerUser.registrationRequest=see <a class='doc-link' href='/docs?section=RegistrationRequest'>RegistrationRequest</a>
docs.AuthController.registerUser.response0.description=user created successfully
docs.AuthController.registerUser.response0.type=
docs.AuthController.registerUser.response0.status=200
docs.AuthController.registerUser.response1.description=email is already in use or role not found
docs.AuthController.registerUser.response1.type=
docs.AuthController.registerUser.response1.status=400
docs.AuthController.registerUser.response2.description=bad credentials or unauthorized
docs.AuthController.registerUser.response2.type=
docs.AuthController.registerUser.response2.status=401
#endregion AuthController.registerUser
#region AuthController.authenticateUser
docs.AuthController.authenticateUser.description=Login by email and password.
docs.AuthController.authenticateUser.loginRequest=see <a class='doc-link' href='/docs?section=LoginRequest'>LoginRequest</a>
docs.AuthController.authenticateUser.response0.description=see <a class='doc-link' href='/docs?section=JwtResponse'>JwtResponse</a>
docs.AuthController.authenticateUser.response0.type=JwtResponse
docs.AuthController.authenticateUser.response0.status=200
docs.AuthController.authenticateUser.response1.description=bad credentials
docs.AuthController.authenticateUser.response1.type=
docs.AuthController.authenticateUser.response1.status=401
#endregion AuthController.authenticateUser
#region AuthController.refreshToken
docs.AuthController.refreshToken.=Refresh <i>Access Token</i> using <i>Refresh Token</i>.
docs.AuthController.refreshToken.request=see <a class='doc-link' href='/docs?section=TokenRefreshRequest'>TokenRefreshRequest</a>
docs.AuthController.refreshToken.response0.description=see <a class='doc-link' href='/docs?section=TokenRefreshResponse'>TokenRefreshResponse</a>
docs.AuthController.refreshToken.response0.type=JwtResponse
docs.AuthController.refreshToken.response0.status=200
docs.AuthController.refreshToken.response1.description=bad credentials
docs.AuthController.refreshToken.response1.type=
docs.AuthController.refreshToken.response1.status=401
#endregion AuthController.refreshToken
#endregion AuthController
#region ControlPanelController
#region ControlPanelController.findById
docs.ControlPanelController.findById.description=Search file by document-id. Requires an Authorization header.
docs.ControlPanelController.findById.documentId=document id
docs.ControlPanelController.findById.response0.description=see <a class='doc-link' href='/docs?section=DocumentControlPanelResponse'>DocumentControlPanelResponse</a>
docs.ControlPanelController.findById.response0.type=DocumentControlPanelResponse
docs.ControlPanelController.findById.response0.status=200
docs.ControlPanelController.findById.response1.description=required arguments were empty
docs.ControlPanelController.findById.response1.type=
docs.ControlPanelController.findById.response1.status=400
docs.ControlPanelController.findById.response2.description=bad credentials
docs.ControlPanelController.findById.response2.type=
docs.ControlPanelController.findById.response2.status=401
docs.ControlPanelController.findById.response3.description=document not found
docs.ControlPanelController.findById.response3.type=
docs.ControlPanelController.findById.response3.status=404
#endregion ControlPanelController.findById
#region ControlPanelController.download
docs.ControlPanelController.download.description=Admin analog for document/.../raw-file. Doesn't require an access key, but requires an Authorization header.
docs.ControlPanelController.download.documentId=document id
docs.ControlPanelController.download.response0.description=file as array of bytes (can be null)
docs.ControlPanelController.download.response0.type=ByteArrayResource
docs.ControlPanelController.download.response0.status=200
docs.ControlPanelController.download.response1.description=required arguments were empty
docs.ControlPanelController.download.response1.type=
docs.ControlPanelController.download.response1.status=400
docs.ControlPanelController.download.response2.description=bad credentials
docs.ControlPanelController.download.response2.type=
docs.ControlPanelController.download.response2.status=401
docs.ControlPanelController.download.response3.description=document not found
docs.ControlPanelController.download.response3.type=
docs.ControlPanelController.download.response3.status=404
#endregion ControlPanelController.download
#region ControlPanelController.getRender
docs.ControlPanelController.getRender.description=Admin analog for document/.../render. Doesn't require an access key, but requires an Authorization header.
docs.ControlPanelController.getRender.documentId=document id
docs.ControlPanelController.getRender.response0.description=document in HTML
docs.ControlPanelController.getRender.response0.type=String
docs.ControlPanelController.getRender.response0.status=200
docs.ControlPanelController.getRender.response1.description=required arguments were empty
docs.ControlPanelController.getRender.response1.type=
docs.ControlPanelController.getRender.response1.status=400
docs.ControlPanelController.getRender.response2.description=bad credentials
docs.ControlPanelController.getRender.response2.type=
docs.ControlPanelController.getRender.response2.status=401
docs.ControlPanelController.getRender.response3.description=document not found
docs.ControlPanelController.getRender.response3.type=
docs.ControlPanelController.getRender.response3.status=404
#endregion ControlPanelController.getRender
#region ControlPanelController.delete
docs.ControlPanelController.delete.description=Delete file from database. Requires an Authorization header.
docs.ControlPanelController.delete.documentId=document id
docs.ControlPanelController.delete.response0.description=file deleted
docs.ControlPanelController.delete.response0.type=
docs.ControlPanelController.delete.response0.status=200
docs.ControlPanelController.delete.response1.description=required arguments were empty
docs.ControlPanelController.delete.response1.type=
docs.ControlPanelController.delete.response1.status=400
docs.ControlPanelController.delete.response2.description=bad credentials
docs.ControlPanelController.delete.response2.type=
docs.ControlPanelController.delete.response2.status=401
docs.ControlPanelController.delete.response3.description=document not found
docs.ControlPanelController.delete.response3.type=
docs.ControlPanelController.delete.response3.status=404
#endregion ControlPanelController.delete
#endregion ControlPanelController
#region QueueController
#region QueueController.reserve
docs.QueueController.reserve.description=Prepares slot in queue.
docs.QueueController.reserve.accessKey=key generated by client
docs.QueueController.reserve.response0.description=slot prepared. See <a class='doc-link' href='/docs?section=QueueResponse'>QueueResponse</a>
docs.QueueController.reserve.response0.type=QueueResponse
docs.QueueController.reserve.response0.status=200
docs.QueueController.reserve.response1.description=access key is invalid
docs.QueueController.reserve.response1.type=
docs.QueueController.reserve.response1.status=403
docs.QueueController.reserve.response2.description=document not found
docs.QueueController.reserve.response2.type=
docs.QueueController.reserve.response2.status=404
#endregion QueueController.reserve
#region QueueController.enqueue
docs.QueueController.enqueue.description=Uses to upload document to server. Restrictions: <ul><li><code>docx</code> format</li><li>20 MB</li></ul>
docs.QueueController.enqueue.documentId=document id
docs.QueueController.enqueue.accessKey=key generated by client
docs.QueueController.enqueue.file=.docx file that will be processed
docs.QueueController.enqueue.response0.description=file successfully processed
docs.QueueController.enqueue.response0.type=
docs.QueueController.enqueue.response0.status=202
docs.QueueController.enqueue.response1.description=required arguments were empty
docs.QueueController.enqueue.response1.type=
docs.QueueController.enqueue.response1.status=400
docs.QueueController.enqueue.response2.description=access key is invalid
docs.QueueController.enqueue.response2.type=
docs.QueueController.enqueue.response2.status=403
docs.QueueController.enqueue.response3.description=document not found
docs.QueueController.enqueue.response3.type=
docs.QueueController.enqueue.response3.status=404
docs.QueueController.enqueue.response4.description=cannot process this document
docs.QueueController.enqueue.response4.type=
docs.QueueController.enqueue.response4.status=422
#endregion QueueController.enqueue
#endregion QueueController
#endregion methods
#region entities
#region responses
#region JwtResponse
docs.JwtResponse.description=Represents <i>Jwt Token</i>.
docs.JwtResponse.accessToken=access token
docs.JwtResponse.refreshToken=refresh token
docs.JwtResponse.username=user's name
docs.JwtResponse.email=user's email
docs.JwtResponse.roles=user's roles
docs.JwtResponse.tokenType=access token type (usually <code>Bearer</code>)
#endregion JwtResponse
#region DocumentControlPanelResponse
docs.DocumentControlPanelResponse.description=Document info.
docs.DocumentControlPanelResponse.documentId=document id
docs.DocumentControlPanelResponse.accessKey=key generated by client
docs.DocumentControlPanelResponse.password=password which was used to locking docx file
docs.DocumentControlPanelResponse.mistakes=list of <a class='doc-link' href='/docs?section=Mistake'>Mistake</a>
docs.DocumentControlPanelResponse.timestamp=request timestamp
#endregion DocumentControlPanelResponse
#region MistakesResponse
docs.MistakesResponse.description=Represents get-mistakes response.
docs.MistakesResponse.documentId=document id
docs.MistakesResponse.mistakes=list of <a class='doc-link' href='/docs?section=Mistake'>Mistake</a>
docs.MistakesResponse.timestamp=request timestamp
#endregion MistakesResponse
#region QueueResponse
docs.QueueResponse.description=Represents document credentials.
docs.QueueResponse.documentId=document id
docs.QueueResponse.accessKey=key generated by client
docs.QueueResponse.timestamp=request timestamp
#endregion QueueResponse
#region StatusResponse
docs.StatusResponse.description=Represents state of document.
docs.StatusResponse.documentId=document id
docs.StatusResponse.status=status of document. Can be:
docs.StatusResponse.timestamp=request timestamp
#endregion StatusResponse
#region TokenRefreshResponse
docs.TokenRefreshResponse.description=Represents <i>Jwt Token</i>.
docs.TokenRefreshResponse.accessToken=access token
docs.TokenRefreshResponse.refreshToken=refresh token
docs.TokenRefreshResponse.tokenType=access token type (usually <code>Bearer</code>)
#endregion TokenRefreshResponse
#endregion responses
#region requests
#region LoginRequest
docs.LoginRequest.description=Email + password pair.
docs.LoginRequest.email=email
docs.LoginRequest.password=password
#endregion LoginRequest
#region RegistrationRequest
docs.RegistrationRequest.description=Represents user data which will be used to create new account.
docs.RegistrationRequest.username=user's name
docs.RegistrationRequest.email=user's email
docs.RegistrationRequest.password=account password
docs.RegistrationRequest.roles=roles list (set) which user will be use. Possible roles:<ul><li>DEV</li><li>ADMIN - for teachers.</li></ul>
#endregion RegistrationRequest
#region TokenRefreshRequest
docs.TokenRefreshRequest.description=Represents <i>Refresh Token</i>.
docs.TokenRefreshRequest.refreshToken=refresh token
#endregion TokenRefreshRequest
#endregion requests
#region Mistake
docs.Mistake.description=Represents mistake found in document.
docs.Mistake.mistakeId=global id of mistake in document
docs.Mistake.paragraphId=pointer to paragraph in document
docs.Mistake.runId=pointer to run in paragraph with <code>paragraphId</code>
docs.Mistake.mistakeType=mistake type. Can be:
docs.Mistake.mistakeDescription=describes expected and found values. Format: <code>"${$FOUND}/${$EXPECTED}"</code>.<br>Also can contains some debug information
#endregion Mistake
#endregion entities
enum.QUEUE=document enqueued
enum.READY_TO_ENQUEUE=document is ready to upload
enum.PROCESSING=document is in processing
enum.ERROR=something went wrong during processing
enum.READY=document is processed
enum.UNDEFINED=document status is unknown
enum.SAVED=document is processed and saved